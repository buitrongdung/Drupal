<?php
namespace Drupal\social_block\Plugin\Block;

use Drupal\Core\Block\BlockBase;
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;


/**
 *
 * @Block(
 *   id = "social_block",
 *   admin_label = @Translation("Social Block"),
 *   category = @Translation("Custom block")
 * )
 */

class SocialBlock extends BlockBase implements ContainerFactoryPluginInterface
{
    protected $configFactory;

    public function __construct(array $configuration, $plugin_id, $plugin_definition, ConfigFactoryInterface $config_factory)
    {
        parent::__construct($configuration, $plugin_id, $plugin_definition);
        $this->configFactory = $config_factory;

    }

    public static function create(ContainerInterface $container, array $configuration, $plugin_id, $plugin_definition)
    {
        return new static(
            $configuration,
            $plugin_id,
            $plugin_definition,
            $container->get('config.factory')
        );
    }

    public function blockForm($form, FormStateInterface $form_state)
    {
        parent::blockForm($form, $form_state); // TODO: Change the autogenerated stub
        $form['social_list'] = [
            '#type' => 'fieldset',
            '#title' => 'Social list',
            '#description' => t(''),
        ];
        $form['social_list']['facebook'] = [
            '#type' => 'textfield',
            '#default_value' => $this->configuration['social_list']['facebook'],
            '#title' => $this->t('Facebook'),
        ];

        $form['social_list']['twitter'] = [
            '#type' => 'textfield',
            '#default_value' => $this->configuration['social_list']['twitter'],
            '#title' => $this->t('Twitter'),
        ];
        $form['social_list']['google-plus'] = [
            '#type' => 'textfield',
            '#default_value' => $this->configuration['social_list']['google-plus'],
            '#title' => $this->t('Google-plus'),
        ];
        $form['social_list']['instagram'] = [
            '#type' => 'textfield',
            '#default_value' => $this->configuration['social_list']['instagram'],
            '#title' => $this->t('Instagram'),
        ];
        $form['social_list']['linkedin'] = [
            '#type' => 'textfield',
            '#default_value' => $this->configuration['social_list']['linkedin'],
            '#title' => $this->t('Linkedin'),
        ];
        $form['social_list']['youtube'] = [
            '#type' => 'textfield',
            '#default_value' => $this->configuration['social_list']['youtube'],
            '#title' => $this->t('Youtube'),
        ];
        return $form;
    }

    public function blockSubmit($form, FormStateInterface $form_state)
    {
        parent::blockSubmit($form, $form_state); // TODO: Change the autogenerated stub
        $social_list = $form_state->getValue('social_list');
        $arr_list = [];
        foreach($social_list as $k => $v) {
            if ($v) {
                $arr_list[$k] = $v;
            }
        }
        $this->configuration['social_list'] = $arr_list;
    }

    public function blockValidate($form, FormStateInterface $form_state)
    {
        parent::blockValidate($form, $form_state); // TODO: Change the autogenerated stub

    }


    /**
     * {@inheritdoc}
     */
    public function build()
    {
        $build = [];
        $social_list = $this->configuration['social_list'];
        $build['social_list'] =  array(
            '#markup' => $social_list,
            '#access' => TRUE
        );
        return $build;
    }

}
