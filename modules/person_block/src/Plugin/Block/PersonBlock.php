<?php
namespace Drupal\person_block\Plugin\Block;

use Drupal\Core\Block\BlockBase;
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;


/**
 *
 * @Block(
 *   id = "person_block",
 *   admin_label = @Translation("Person Block"),
 *   category = @Translation("Custom block")
 * )
 */

class PersonBlock extends BlockBase
{

    /**
     * {@inheritdoc}
     */
    public function getFormId()
    {
        return 'person_block';
    }

    public function blockForm($form, FormStateInterface $form_state)
    {
        return parent::blockForm($form, $form_state); // TODO: Change the autogenerated stub
    }

    public function blockSubmit($form, FormStateInterface $form_state)
    {
    }


    /**
     * {@inheritdoc}
     */
    public function build()
    {
       $arr_content = $this->getContentByDomynic();

        $build['list_content'] =  array(
            '#markup' => $arr_content,
            '#access' => TRUE
        );
        return $build;
    }

    public function getContentByDomynic()
    {

        $query = \Drupal::entityQuery('node')
            ->condition('status', 1)
            ->condition('type', 'domynic');
        $nids = $query->execute();

        $arr_content = [];
        foreach($nids as $nid) {
            $node = \Drupal\node\Entity\Node::load($nid);
            $name = $node->field_name->value;
            $birth = $node->field_birth->value;
            $file_image = file_url_transform_relative(file_create_url($node->field_image->entity->getFileUri()));
            $arr_content[$nid] = [
                'url' => '/node/' . $nid,
                'birth' => date("d-m-Y", strtotime($birth)),
                'name'  => ucwords($name),
                'image' => $file_image
            ];
        }
        return $arr_content;

    }

}
